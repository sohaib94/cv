{"version":3,"sources":["assets sync /^/.//.*$","assets/Kings_College_London_logo.svg","assets/apadmi-logo.svg","assets/deloitte_logo.png","assets/ibm_logo.png","assets/profile.png","components/BashWindow.js","pages/home.js","serviceWorker.js","index.js"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","BashWindow","props","className","style","backgroundColor","backgroundColour","color","textColour","fontSize","logo","src","require","alt","margin","marginBottom","width","display","justifySelf","main_info","list_item","index","key","sub_info","url","name","wrap","Home","ref","parallax","pages","offset","speed","factor","backgroundImage","backgroundSize","pointerEvents","marginLeft","opacity","alignItems","justifyContent","href","target","rel","zIndex","paddingTop","paddingLeft","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.626a941f.chunk.js","sourcesContent":["var map = {\n\t\"./Kings_College_London_logo.svg\": 27,\n\t\"./apadmi-logo.svg\": 28,\n\t\"./deloitte_logo.png\": 29,\n\t\"./ibm_logo.png\": 30,\n\t\"./profile.png\": 31\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 26;","module.exports = __webpack_public_path__ + \"static/media/Kings_College_London_logo.b43c579f.svg\";","module.exports = __webpack_public_path__ + \"static/media/apadmi-logo.540b160a.svg\";","module.exports = __webpack_public_path__ + \"static/media/deloitte_logo.fb10d629.png\";","module.exports = __webpack_public_path__ + \"static/media/ibm_logo.01c6d62c.png\";","module.exports = __webpack_public_path__ + \"static/media/profile.4be8e770.png\";","import React from \"react\";\nimport \"./BashWindow.css\";\n\nconst BashWindow = (props) => {\n    return (\n        <div\n            className='bash'\n            style={{\n                backgroundColor: props.backgroundColour,\n            }}>\n            <div className='taskbar'>\n                <div className='close-button button' />\n                <div className='minimise-button button' />\n                <div className='maximise-button button' />\n            </div>\n            <div className='main-window'>\n                <div\n                    className='details'\n                    style={{ color: props.textColour, fontSize: \"120%\" }}>\n                    <div className='logo'>\n                        <img\n                            id={props.logo}\n                            src={require(`../assets/${props.logo}`)}\n                            alt='Logo'\n                            style={{\n                                margin: \"0.5vh auto\",\n                                marginBottom: \"1vh\",\n                                width: \"25%\",\n                                display: \"flex\",\n                                justifySelf: \"center\",\n                            }}\n                        />\n                    </div>\n                    <div className='main-info bash-text'>\n                        <ul>\n                            {props.main_info.map((list_item, index) => {\n                                return <li key={index}>{list_item}</li>;\n                            })}\n                        </ul>\n                    </div>\n                    <div className='sub-info bash-text'>\n                        <ul>\n                            {props.sub_info.map((list_item, index) => {\n                                return <li key={index}>{list_item}</li>;\n                            })}\n                        </ul>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default BashWindow;\n","import React from \"react\";\nimport { Parallax, ParallaxLayer } from \"react-spring/renderprops-addons\";\nimport \"./home.css\";\nimport BashWindow from \"../components/BashWindow\";\n\n// Little helpers ...\nconst url = (name, wrap = false) =>\n    `${\n        wrap ? \"url(\" : \"\"\n    }https://awv3node-homepage.surge.sh/build/assets/${name}.svg${\n        wrap ? \")\" : \"\"\n    }`;\n// const Pink = ({ children }) => (\n//     <span style={{ color: \"#FF6AC1\" }}>{children}</span>\n// );\n// const Yellow = ({ children }) => (\n//     <span style={{ color: \"#EFF59B\" }}>{children}</span>\n// );\n// const Lightblue = ({ children }) => (\n//     <span style={{ color: \"#9AEDFE\" }}>{children}</span>\n// );\n// const Green = ({ children }) => (\n//     <span style={{ color: \"#57EE89\" }}>{children}</span>\n// );\n// const Blue = ({ children }) => (\n//     <span style={{ color: \"#57C7FF\" }}>{children}</span>\n// );\n// const Gray = ({ children }) => (\n//     <span style={{ color: \"#909090\" }}>{children}</span>\n// );\n\nclass Home extends React.Component {\n    render() {\n        return (\n            <Parallax ref={(ref) => (this.parallax = ref)} pages={3}>\n                <ParallaxLayer\n                    offset={1}\n                    speed={1}\n                    style={{ backgroundColor: \"#805E73\" }}\n                />\n                <ParallaxLayer\n                    offset={2}\n                    speed={1}\n                    style={{ backgroundColor: \"#87BCDE\" }}\n                />\n\n                <ParallaxLayer\n                    offset={0}\n                    speed={0}\n                    factor={3}\n                    style={{\n                        backgroundImage: url(\"stars\", true),\n                        backgroundSize: \"cover\",\n                    }}\n                />\n\n                <ParallaxLayer\n                    offset={1.3}\n                    speed={-0.3}\n                    style={{ pointerEvents: \"none\" }}>\n                    <img\n                        alt=''\n                        src={url(\"satellite4\")}\n                        style={{ width: \"15%\", marginLeft: \"70%\" }}\n                    />\n                </ParallaxLayer>\n\n                <ParallaxLayer offset={1} speed={0.8} style={{ opacity: 0.1 }}>\n                    <img\n                        alt=''\n                        src={url(\"cloud\")}\n                        style={{\n                            display: \"block\",\n                            width: \"20%\",\n                            marginLeft: \"55%\",\n                        }}\n                    />\n                    <img\n                        alt=''\n                        src={url(\"cloud\")}\n                        style={{\n                            display: \"block\",\n                            width: \"10%\",\n                            marginLeft: \"15%\",\n                        }}\n                    />\n                </ParallaxLayer>\n\n                <ParallaxLayer\n                    offset={1.75}\n                    speed={0.5}\n                    style={{ opacity: 0.1 }}>\n                    <img\n                        alt=''\n                        src={url(\"cloud\")}\n                        style={{\n                            display: \"block\",\n                            width: \"20%\",\n                            marginLeft: \"70%\",\n                        }}\n                    />\n                    <img\n                        alt=''\n                        src={url(\"cloud\")}\n                        style={{\n                            display: \"block\",\n                            width: \"20%\",\n                            marginLeft: \"40%\",\n                        }}\n                    />\n                </ParallaxLayer>\n\n                <ParallaxLayer offset={1} speed={0.2} style={{ opacity: 0.2 }}>\n                    <img\n                        alt=''\n                        src={url(\"cloud\")}\n                        style={{\n                            display: \"block\",\n                            width: \"10%\",\n                            marginLeft: \"10%\",\n                        }}\n                    />\n                    <img\n                        alt=''\n                        src={url(\"cloud\")}\n                        style={{\n                            display: \"block\",\n                            width: \"20%\",\n                            marginLeft: \"75%\",\n                        }}\n                    />\n                </ParallaxLayer>\n\n                <ParallaxLayer\n                    offset={1.6}\n                    speed={-0.1}\n                    style={{ opacity: 0.4 }}>\n                    <img\n                        alt=''\n                        src={url(\"cloud\")}\n                        style={{\n                            display: \"block\",\n                            width: \"20%\",\n                            marginLeft: \"60%\",\n                        }}\n                    />\n                    <img\n                        alt=''\n                        src={url(\"cloud\")}\n                        style={{\n                            display: \"block\",\n                            width: \"25%\",\n                            marginLeft: \"30%\",\n                        }}\n                    />\n                    <img\n                        alt=''\n                        src={url(\"cloud\")}\n                        style={{\n                            display: \"block\",\n                            width: \"10%\",\n                            marginLeft: \"80%\",\n                        }}\n                    />\n                </ParallaxLayer>\n\n                <ParallaxLayer\n                    offset={2.6}\n                    speed={0.4}\n                    style={{ opacity: 0.6 }}>\n                    <img\n                        alt=''\n                        src={url(\"cloud\")}\n                        style={{\n                            display: \"block\",\n                            width: \"20%\",\n                            marginLeft: \"5%\",\n                        }}\n                    />\n                    <img\n                        alt=''\n                        src={url(\"cloud\")}\n                        style={{\n                            display: \"block\",\n                            width: \"15%\",\n                            marginLeft: \"75%\",\n                        }}\n                    />\n                </ParallaxLayer>\n\n                <ParallaxLayer\n                    offset={2.5}\n                    speed={-0.4}\n                    style={{\n                        display: \"flex\",\n                        alignItems: \"center\",\n                        justifyContent: \"center\",\n                        pointerEvents: \"none\",\n                    }}>\n                    <img alt='' src={url(\"earth\")} style={{ width: \"60%\" }} />\n                </ParallaxLayer>\n\n                {/* <ParallaxLayer\n                    offset={2}\n                    speed={-0.3}\n                    style={{\n                        backgroundSize: \"80%\",\n                        backgroundPosition: \"center\",\n                        backgroundImage: url(\"clients\", true),\n                    }}\n                /> */}\n\n                <ParallaxLayer\n                    offset={0}\n                    speed={0.1}\n                    // onClick={() => this.parallax.scrollTo(1)}\n                    style={{\n                        display: \"flex\",\n                        alignItems: \"center\",\n                        justifyContent: \"center\",\n                    }}>\n                    <BashWindow\n                        logo='profile.png'\n                        main_info={[\"Sohaib Ashraf\"]}\n                        sub_info={[\n                            \"Software Developer\",\n                            <a\n                                href='https://www.linkedin.com/in/sohaib-ashraf-609a40b6/'\n                                target='_blank'\n                                rel='noopener noreferrer'>\n                                LinkedIn\n                            </a>,\n                        ]}\n                        backgroundColour='#101010'\n                        textColour='white'\n                    />\n                    {/* <img alt='' src={url(\"server\")} style={{ width: \"20%\" }} /> */}\n                </ParallaxLayer>\n\n                <ParallaxLayer\n                    offset={1}\n                    speed={0.1}\n                    // onClick={() => this.parallax.scrollTo(2)}\n                    style={{\n                        display: \"flex\",\n                        alignItems: \"center\",\n                        justifyContent: \"center\",\n                    }}>\n                    <BashWindow\n                        logo='Kings_College_London_logo.svg'\n                        main_info={[\"King's College London\"]}\n                        sub_info={[\"Mathematics\", \"Class of 2016\"]}\n                        backgroundColour='#101010'\n                        textColour='white'\n                    />\n                    {/* <img alt='' src={url(\"bash\")} style={{ width: \"40%\" }} /> */}\n                </ParallaxLayer>\n\n                <ParallaxLayer\n                    offset={2}\n                    speed={-0}\n                    style={{\n                        display: \"flex\",\n                        alignItems: \"center\",\n                        justifyContent: \"center\",\n                        zIndex: 1,\n                    }}\n                    // onClick={() => this.parallax.scrollTo(0)}\n                >\n                    <BashWindow\n                        logo='ibm_logo.png'\n                        main_info={[\"IBM\"]}\n                        sub_info={[\"Software developer\", \"Feb 2020 - Present\"]}\n                        backgroundColour='white'\n                        textColour='black'\n                    />\n                </ParallaxLayer>\n\n                <ParallaxLayer\n                    offset={2}\n                    speed={-0.3}\n                    style={{\n                        paddingTop: \"20vh\",\n                    }}>\n                    <BashWindow\n                        logo='deloitte_logo.png'\n                        main_info={[\"Deloitte\"]}\n                        sub_info={[\n                            \"Technology Consultant\",\n                            \"Sep 2017 - Jan 2020\",\n                        ]}\n                        backgroundColour='white'\n                        textColour='black'\n                    />\n                </ParallaxLayer>\n\n                <ParallaxLayer\n                    offset={2}\n                    speed={-0.3}\n                    style={{\n                        paddingLeft: \"60vw\",\n                        paddingTop: \"20vh\",\n                        zIndex: 2,\n                    }}>\n                    <BashWindow\n                        logo='apadmi-logo.svg'\n                        main_info={[\"Apadmi\"]}\n                        sub_info={[\n                            \"Developer in Test\",\n                            \"Sept 2016 - Sept 2017\",\n                        ]}\n                        backgroundColour='white'\n                        textColour='black'\n                    />\n                </ParallaxLayer>\n            </Parallax>\n        );\n    }\n}\n\nexport default Home;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport Home from \"./pages/home\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <Home />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}